### 딥러닝 라이브러리
- tensorflow : 데이터 플로 그래프를 활용해 수치 계산을 하는 오픈소스 소프트웨어
               심볼릭 수학 라이브러리이자 인공신경망 같은 머신러닝 및 딥러닝에 사용됨.
               2015년 11월 구글에서 공개됨
 - keras     : layers, models, optimizers, loss functions, metrics, and more.
 - pytorch   : 
   -> tensorflow 2.9 
   -> 2.0부터 keras문법을 사용.
(각 라이브러리에 대한 설명은 추후 추가하기)

### Bike Sharing Demand 
 - 딥러닝 이미지, 시계열데이터 
 ( 시계열 데이터 
    #의미: 일정한 시간동안 수집된 일련의 순차적으로 정해진 데이터 셋의 집합 , 
    #1 시간에 관해 순서가 매겨져 있다, #2 연속한 관측치는 서로 상관관계를 가짐
    #목적: 시계열이 갖고 있는 법칙성을 발견해 이를 모형화하고, 또 추정된 모형을 통해 미래의 값을 forecasting하는것)
  
 - 인공신경망(neural network)
    - 입력층(input layer) : 입력 벡터가 자리잡는 층
	- 은닉층(hidden layer): 입력층과 출력층 사이에 위치하는 모든 층 -> 은닉층의 개수가 많아질수록 Deep Learning
	- 출력층(ouput layer): 최종 출력값이 자리잡는 층
	
  - 그림으로 표현할 때는 3개의 층을 그리나, 실제 인공신경망의 층 개수를 셀 때 입력층은 생략하는 것을 주의
  - 퍼셉트론을 기본 빌딩 블록으로 하여 이런 패턴에 따라 2차원적으로 연결되어 구성되는 인공신경망의 일종을
  '다층 퍼셉트론(MLP)'이라고 함
  - 딥러닝을 하기 위해 충분히 깊은 인공신경망을 '심층 신경망(DNN)'이라고 통칭.
    -> 일반적인 기준: 은닉층+출력층이 2개 이상
    
 - 입력과 출력
    입력 - 2개변수
	출력 - count
	
 - 출력이 어떤 형태가 되는가에 따라서 마지막 출력층이 달라진다.
    출력 - 연속형변수 
	  맨 마지막 층 뉴런이 하나(활성화 함수는 없다.)
	출력 - 이진 분류(범주형 변수 2개)
	  맨 마지막 층 뉴런이 하나(활성화 sigmoid) 
	출력 - 다항 분류(범주형 변수 3개 이상)
	  맨 마지막 층 뉴런이 분류하고자 하는 개수만큼(활성화 함수는 softmax) - 모든 결과값을 더해서 1이 나온다.
	
### Keras를 이용해서 딥러닝을 만들때,
keras.models.Sequential : 딥러닝 구조를 만드는 큰 틀을 준비
keras.layers.Dense  : 각 세부 층을 설정 또는 지정.

input_dim = 입력층 특징 개수
 
이미지는 28*28 => 784개

### 딥러닝 구조 만들고 계산 또는 가중치 업데이트 알고리즘 지정
model.compile(

출력층 결과와 원래 답을 오차를 구하는 함수 : loss
    mean_squared_error
가중치를 업데이트를 시키는 알고리즘 : rmsprop

배치 사이즈 :
epochs
batch_size 

model.evaluate()로 평가 수행
model.predict()로 예측 수행
        
